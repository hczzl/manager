<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.web.mapper.item.TaskPostponeMapper">

    <resultMap type="TaskPostpone" id="TaskPostponeResult">
        <result property="id" column="id"/>
        <result property="tId" column="t_id"/>
        <result property="isNew" column="is_new"/>
        <result property="type" column="type"/>
        <result property="createChangeUser" column="create_change_user"/>
        <result property="isPostpone" column="is_postpone"/>
        <result property="currentId" column="current_id"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="state" column="state"/>
        <result property="chargeId" column="charge_id"/>
        <result property="particiants" column="particiants"/>
        <result property="period" column="period"/>
        <result property="memo" column="memo"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectTaskPostponeVo">
        select id,t_id,type,is_postpone, is_new,create_change_user,current_id,start_time, end_time, state,period,particiants,charge_id, memo from task_postpone
    </sql>

    <select id="selectTaskPostponeList" parameterType="TaskPostpone" resultMap="TaskPostponeResult">
        <include refid="selectTaskPostponeVo"/>
        <where>
        </where>
    </select>

    <select id="selectTaskPostponeById" parameterType="Long" resultMap="TaskPostponeResult">
        <include refid="selectTaskPostponeVo"/>
        where id = #{id}
    </select>
    <select id="selectMaxId" parameterType="TaskPostpone" resultType="Integer">
        select max(id) from task_postpone
        <where>
            <if test="tId !=null">and t_id=#{tId}</if>
            <if test="currentId !=null">and current_id=#{currentId}</if>
            <if test="isNew !=null">and is_new=#{isNew}</if>
        </where>
    </select>
    <select id="selectById" parameterType="TaskPostpone" resultMap="TaskPostponeResult">
        select * from task_postpone
        <where>
            <if test="tId !=null">and t_id=#{tId}</if>
            <if test="currentId !=null">and current_id=#{currentId}</if>
            <if test="isNew !=null">and is_new=#{isNew}</if>
            <if test="state !=null">and state=#{state}</if>
        </where>
    </select>
    <select id="selectTaskChange" parameterType="TaskPostpone" resultMap="TaskPostponeResult">
        select * from task_postpone
        <where>
            <if test="tId !=null">and t_id=#{tId}</if>
            <if test="currentId !=null">and current_id=#{currentId}</if>
            <if test="isNew !=null">and is_new=#{isNew}</if>
            <if test="state !=null">and state=#{state}</if>
            <if test="typeList != null">
                and is_new in
                <foreach item="item" index="index" open="(" separator="," close=")" collection="typeList">
                    #{item}
                </foreach>
            </if>
        </where>
        order by create_time DESC
    </select>
    <insert id="insertTaskPostpone" parameterType="TaskPostpone" useGeneratedKeys="true" keyProperty="id">
        insert into task_postpone
        <trim prefix="(" suffix=")" suffixOverrides=",">
            t_id,
            <if test="isNew != null ">is_new,</if>
            <if test="type != null ">type,</if>
            <if test="currentId != null ">current_id,</if>
            <if test="createChangeUser != null ">create_change_user,</if>
            <if test="isPostpone != null ">is_postpone,</if>
            <if test="startTime != null ">start_time,</if>
            <if test="endTime != null ">end_time,</if>
            <if test="state != null ">state,</if>
            <if test="chargeId != null ">charge_id,</if>
            <if test="particiants != null ">particiants,</if>
            <if test="period != null ">period,</if>
            <if test="memo != null ">memo,</if>
            <if test="createTime != null ">create_time</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{tId},
            <if test="isNew != null ">#{isNew},</if>
            <if test="type != null ">#{type},</if>
            <if test="currentId != null ">#{currentId},</if>
            <if test="createChangeUser != null ">#{createChangeUser},</if>
            <if test="isPostpone != null ">#{isPostpone},</if>
            <if test="startTime != null ">#{startTime},</if>
            <if test="endTime != null ">#{endTime},</if>
            <if test="state != null ">#{state},</if>
            <if test="chargeId != null ">#{chargeId},</if>
            <if test="particiants != null ">#{particiants},</if>
            <if test="period != null ">#{period},</if>
            <if test="memo != null ">#{memo},</if>
            <if test="createTime != null ">#{createTime}</if>
        </trim>
    </insert>

    <update id="updateTaskPostpone" parameterType="TaskPostpone">
        update task_postpone
        <trim prefix="SET" suffixOverrides=",">
            <if test="tId != null ">t_id = #{tId},</if>
            <if test="isNew != null ">is_new=#{isNew},</if>
            <if test="type != null ">type=#{type},</if>
            <if test="createChangeUser != null ">create_change_user=#{createChangeUser},</if>
            <if test="isPostpone != null ">is_postpone=#{isPostpone},</if>
            <if test="currentId != null and currentId !=''">current_id = #{currentId},</if>
            <if test="startTime != null ">start_time = #{startTime},</if>
            <if test="endTime != null ">end_time = #{endTime},</if>
            <if test="state != null ">state = #{state},</if>
            <if test="chargeId != null ">charge_Id=#{chargeId},</if>
            <if test="particiants != null ">particiants=#{particiants},</if>
            <if test="period != null ">period = #{period},</if>
            <if test="memo != null  and memo != ''">memo = #{memo},</if>
            <if test="updateTime != null ">update_time = #{updateTime}</if>
        </trim>
        <where>
            <if test="id != null">and id = #{id}</if>
            <if test="tId != null ">and t_id = #{tId}</if>
            <if test="currentId != null and currentId !=''">and current_id = #{currentId}</if>
        </where>
    </update>

    <delete id="deleteTaskPostponeById" parameterType="Long">
        delete from task_postpone where id = #{id}
    </delete>

    <delete id="deleteTaskPostponeByIds" parameterType="String">
        delete from task_postpone where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="insertInitTaskPostpone">
        INSERT INTO task_postpone
        <trim prefix="(" suffix=")" suffixOverrides=",">
            t_id,
            <if test="isNew != null ">is_new,</if>
            <if test="type != null ">type,</if>
            <if test="currentId != null ">current_id,</if>
            <if test="createChangeUser != null ">create_change_user,</if>
            <if test="isPostpone != null ">is_postpone,</if>
            <if test="startTime != null ">start_time,</if>
            <if test="endTime != null ">end_time,</if>
            <if test="state != null ">state,</if>
            <if test="chargeId != null ">charge_id,</if>
            <if test="particiants != null ">particiants,</if>
            <if test="period != null ">period,</if>
            <if test="memo != null ">memo,</if>
            <if test="createTime != null ">create_time</if>
        </trim>

        SELECT
        <trim suffixOverrides=",">
            #{tId},
            <if test="isNew != null ">#{isNew},</if>
            <if test="type != null ">#{type},</if>
            <if test="currentId != null ">#{currentId},</if>
            <if test="createChangeUser != null ">#{createChangeUser},</if>
            <if test="isPostpone != null ">#{isPostpone},</if>
            <if test="startTime != null ">#{startTime},</if>
            <if test="endTime != null ">#{endTime},</if>
            <if test="state != null ">#{state},</if>
            <if test="chargeId != null ">#{chargeId},</if>
            <if test="particiants != null ">#{particiants},</if>
            <if test="period != null ">#{period},</if>
            <if test="memo != null ">#{memo},</if>
            <if test="createTime != null ">#{createTime}</if>
        </trim>
        FROM DUAL WHERE NOT EXISTS
        (SELECT 1 FROM task_postpone WHERE
        <trim prefixOverrides="and">
            and t_id=#{tId}
        </trim>
        );
    </insert>
    <select id="selectChangeMemo" parameterType="java.lang.Long" resultType="java.lang.String">
        select  memo  from task_postpone
        where t_id = #{tId} and is_new = 1
        order by create_time desc
        limit 1
    </select>
</mapper>