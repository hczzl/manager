<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysDeptMapper">

    <resultMap type="SysDept" id="SysDeptResult">
        <id property="deptId" column="dept_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="ancestors" column="ancestors"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="parentName" column="parent_name"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="countDept" column="count_dept"/>
        <collection property="users" column="dept_id" select="getChildrenUsers">
        </collection>
    </resultMap>
    <resultMap type="SysDeptVo" id="SysDeptResult2">
        <id property="deptId" column="dept_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="deptName" column="dept_name"/>
    </resultMap>
    <resultMap type="SysDept" id="SysDeptLeadershipResul">
        <id property="deptId" column="dept_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="ancestors" column="ancestors"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="parentName" column="parent_name"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="countDept" column="count_dept"/>
        <!--<collection property="users" ofType="com.ruoyi.system.domain.SysUser" resultMap="com.ruoyi.system.mapper.SysUserMapper.SysUserResult">
        </collection>-->
        <!--<collection property="childDept" column="dept_id" select="getChildrenDept">
        </collection>-->
        <collection property="users" column="dept_id" select="LeadershipChildrenUsers">
        </collection>
    </resultMap>


    <sql id="selectDeptVo">
        select d.dept_id, d.parent_id, d.ancestors, d.parent_id, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag, d.create_by, d.create_time
        from sys_dept d
    </sql>
    <select id="selectAllDeptId" parameterType="SysDeptVo" resultMap="SysDeptResult2">
        select dept_id,dept_name,parent_id,parent_id from  sys_dept
    </select>
    <select id="selectRoleDeptTree" parameterType="Long" resultType="String">
		select concat(d.dept_id, d.dept_name) as dept_name
		from sys_dept d
			left join sys_role_dept rd on d.dept_id = rd.dept_id
		where d.del_flag = '0' and rd.role_id = #{roleId}
		order by d.parent_id, d.order_num
	</select>

    <select id="selectLeadershipDeptList" parameterType="SysDept" resultMap="SysDeptLeadershipResul">
		select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag, d.create_by, d.create_time,
		(select dept_name from sys_dept where dept_id = d.parent_id) parent_name ,(SELECT count(*) FROM sys_user u
		WHERE (u.dept_id = d.dept_id OR u.dept_id IN
		( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET (d.dept_id,ancestors) )) and u.del_flag='0' and u.status = '0') as count_dept  from sys_dept d
		where d.del_flag = '0'

    </select>
    <select id="LeadershipChildrenUsers" parameterType="Long"
            resultMap="com.ruoyi.system.mapper.SysUserMapper.SysUserResult">
		select uu.*,(SELECT dict_label FROM  sys_dict_data WHERE dict_code=uu.rank_id) as rank_name from  sys_user uu
		WHERE  uu.dept_id=#{dept_id} AND  uu.del_flag='0' AND uu.rank_id in (27,28)
	</select>
    <select id="selectDeptList" parameterType="SysDept" resultMap="SysDeptResult">
        SELECT d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status,
        d.del_flag, d.create_by, d.create_time,
        (SELECT dept_name FROM sys_dept WHERE dept_id = d.parent_id) parent_name ,
        (SELECT COUNT(*) FROM sys_user u WHERE (u.dept_id = d.dept_id OR u.dept_id IN
        ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET (d.dept_id,ancestors) )) AND u.del_flag='0' AND u.status ='0') AS count_dept
        FROM sys_dept d

        WHERE d.del_flag = '0'
        <if test="parentId != null and parentId != 0">
            AND parent_id = #{parentId}
        </if>
        <if test="deptId != null ">
            AND d.dept_id = #{deptId}
        </if>
        <if test="deptName != null and deptName != ''">
            AND dept_name like concat('%', #{deptName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        order by d.order_num
    </select>
    <select id="getChildrenUsers" parameterType="Long" resultMap="com.ruoyi.system.mapper.SysUserMapper.SysUserResult">
		select uu.*,(SELECT dict_label FROM  sys_dict_data WHERE dict_code=uu.rank_id) as rank_name
		from  sys_user uu  WHERE  uu.dept_id=#{dept_id} AND  uu.del_flag='0' AND uu.status = '0'
	</select>

    <select id="checkDeptExistUser" parameterType="Long" resultType="int">
		select count(1) from sys_user where dept_id = #{deptId} and del_flag = '0'
	</select>

    <select id="selectDeptCount" parameterType="SysDept" resultType="int">
        select count(1) from sys_dept
        where del_flag = '0'
        <if test="deptId != null and deptId != 0">and dept_id = #{deptId}</if>
        <if test="parentId != null and parentId != 0">and parent_id = #{parentId}</if>
    </select>

    <select id="checkDeptNameUnique" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where dept_name=#{deptName} and parent_id = #{parentId}
    </select>

    <select id="selectDeptById" parameterType="Long" resultMap="SysDeptResult">
		select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status,
			(select dept_name from sys_dept where dept_id = d.parent_id) parent_name
		from sys_dept d
		where d.dept_id = #{deptId}
	</select>

    <insert id="insertDept" parameterType="SysDept">
        insert into sys_dept(
        <if test="deptId != null and deptId != 0">dept_id,</if>
        <if test="parentId != null and parentId != 0">parent_id,</if>
        <if test="deptName != null and deptName != ''">dept_name,</if>
        <if test="ancestors != null and ancestors != ''">ancestors,</if>
        <if test="orderNum != null and orderNum != ''">order_num,</if>
        <if test="leader != null and leader != ''">leader,</if>
        <if test="phone != null and phone != ''">phone,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="status != null">status,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        )values(
        <if test="deptId != null and deptId != 0">#{deptId},</if>
        <if test="parentId != null and parentId != 0">#{parentId},</if>
        <if test="deptName != null and deptName != ''">#{deptName},</if>
        <if test="ancestors != null and ancestors != ''">#{ancestors},</if>
        <if test="orderNum != null and orderNum != ''">#{orderNum},</if>
        <if test="leader != null and leader != ''">#{leader},</if>
        <if test="phone != null and phone != ''">#{phone},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="status != null">#{status},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>

    <update id="updateDept" parameterType="SysDept">
        update sys_dept
        <set>
            <if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
            <if test="deptName != null and deptName != ''">dept_name = #{deptName},</if>
            <if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
            <if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
            <if test="leader != null">leader = #{leader},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where dept_id = #{deptId}
    </update>

    <update id="updateDeptChildren" parameterType="java.util.List">
        update sys_dept set ancestors =
        <foreach collection="depts" item="item" index="index"
                 separator=" " open="case dept_id" close="end">
            when #{item.deptId} then #{item.ancestors}
        </foreach>
        where dept_id in
        <foreach collection="depts" item="item" index="index"
                 separator="," open="(" close=")">
            #{item.deptId}
        </foreach>
    </update>

    <delete id="deleteDeptById" parameterType="Long">
		update sys_dept set del_flag = '2' where dept_id = #{deptId}
	</delete>

    <update id="updateDeptStatus" parameterType="SysDept">
        update sys_dept
        <set>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where dept_id in (${ancestors})
    </update>

    <!--根据部门Id来获取部门名称-->
    <select id="selectDepartmentNameById" parameterType="Long" resultType="String">
		select dept_name from sys_dept
		where dept_id = #{departmentId}
	</select>

    <select id="selectGroupDeptList" parameterType="SysDept" resultMap="SysDeptResult">
        select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status,
        d.del_flag, d.create_by, d.create_time,
        (select dept_name from sys_user_group where dept_id = d.parent_id) parent_name ,(SELECT count(*) FROM sys_user u
        WHERE (u.dept_id = d.dept_id OR u.dept_id IN
        ( SELECT t.dept_id FROM sys_user_group t WHERE FIND_IN_SET (d.dept_id,ancestors) )) and u.del_flag='0') as
        count_dept from sys_user_group d
        where d.del_flag = '0'
        <if test="parentId != null and parentId != 0">
            AND parent_id = #{parentId}
        </if>
        <if test="deptId != null ">
            AND d.dept_id = #{deptId}
        </if>
        <if test="deptName != null and deptName != ''">
            AND dept_name like concat('%', #{deptName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND status = #{status}
        </if>
        <!--<if test="searchRoleId != null and searchRoleId != ''">
            AND d.dept_id in (SELECT dept_id FROM sys_user a LEFT JOIN sys_user_role b ON a.user_id=b.user_id WHERE b.role_id  in (#{searchRoleId}))
        </if>-->
        <!-- 数据范围过滤 -->
        <!--${params.dataScope}-->
        order by d.order_num
    </select>
</mapper> 