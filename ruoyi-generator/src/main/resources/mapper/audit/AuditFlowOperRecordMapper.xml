<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pms.mapper.audit.AuditFlowOperRecordMapper">
    
    <resultMap type="AuditFlowOperRecord" id="AuditFlowOperRecordResult">
        <result property="recordId"    column="record_id"    />
        <result property="currentId"    column="current_id"    />
        <result property="currentNodeId"    column="current_node_id"    />
        <result property="operUserId"    column="oper_user_id"    />
        <result property="operType"    column="oper_type"    />
        <result property="operMemo"    column="oper_memo"    />
        <result property="addTime"    column="add_time"    />
        <result property="state"    column="state"    />
    </resultMap>
	
	<sql id="selectAuditFlowOperRecordVo">
        select record_id, current_id, current_node_id, oper_user_id, oper_type, oper_memo, add_time, state from audit_flow_oper_record
    </sql>
	
    <select id="selectAuditFlowOperRecordList" parameterType="AuditFlowOperRecord" resultMap="AuditFlowOperRecordResult">
        <include refid="selectAuditFlowOperRecordVo"/>
        <where>  
            <if test="recordId != null "> and record_id = #{recordId}</if>
             <if test="currentId != null "> and current_id = #{currentId}</if>
             <if test="currentNodeId != null "> and current_node_id = #{currentNodeId}</if>
             <if test="operUserId != null "> and oper_user_id = #{operUserId}</if>
             <if test="operType != null "> and oper_type = #{operType}</if>
             <if test="operMemo != null  and operMemo != '' "> and oper_memo = #{operMemo}</if>
             <if test="addTime != null "> and add_time = #{addTime}</if>
             <if test="state != null "> and state = #{state}</if>
         </where>
    </select>
    
    <select id="selectAuditFlowOperRecordById" parameterType="Integer" resultMap="AuditFlowOperRecordResult">
        <include refid="selectAuditFlowOperRecordVo"/>
        where record_id = #{recordId}
    </select>
        
    <insert id="insertAuditFlowOperRecord" parameterType="AuditFlowOperRecord" useGeneratedKeys="true" keyProperty="recordId">
        insert into audit_flow_oper_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="currentId != null  ">current_id,</if>
			<if test="currentNodeId != null  ">current_node_id,</if>
			<if test="operUserId != null  ">oper_user_id,</if>
			<if test="operType != null  ">oper_type,</if>
			<if test="operMemo != null  and operMemo != ''  ">oper_memo,</if>
			<if test="addTime != null  ">add_time,</if>
			<if test="state != null  ">state,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="currentId != null  ">#{currentId},</if>
			<if test="currentNodeId != null  ">#{currentNodeId},</if>
			<if test="operUserId != null  ">#{operUserId},</if>
			<if test="operType != null  ">#{operType},</if>
			<if test="operMemo != null  and operMemo != ''  ">#{operMemo},</if>
			<if test="addTime != null  ">#{addTime},</if>
			<if test="state != null  ">#{state},</if>
         </trim>
    </insert>
	 
    <update id="updateAuditFlowOperRecord" parameterType="AuditFlowOperRecord">
        update audit_flow_oper_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="currentId != null  ">current_id = #{currentId},</if>
            <if test="currentNodeId != null  ">current_node_id = #{currentNodeId},</if>
            <if test="operUserId != null  ">oper_user_id = #{operUserId},</if>
            <if test="operType != null  ">oper_type = #{operType},</if>
            <if test="operMemo != null  and operMemo != ''  ">oper_memo = #{operMemo},</if>
            <if test="addTime != null  ">add_time = #{addTime},</if>
            <if test="state != null  ">state = #{state},</if>
        </trim>
        where record_id = #{recordId}
    </update>

	<delete id="deleteAuditFlowOperRecordById" parameterType="Integer">
        delete from audit_flow_oper_record where record_id = #{recordId}
    </delete>
	
    <delete id="deleteAuditFlowOperRecordByIds" parameterType="String">
        delete from audit_flow_oper_record where record_id in 
        <foreach item="recordId" collection="array" open="(" separator="," close=")">
            #{recordId}
        </foreach>
    </delete>
    
</mapper>